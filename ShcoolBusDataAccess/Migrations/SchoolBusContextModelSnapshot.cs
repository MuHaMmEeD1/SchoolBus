// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShcoolBusDataAccess.Contexts;

#nullable disable

namespace ShcoolBusDataAccess.Migrations
{
    [DbContext(typeof(SchoolBusContext))]
    partial class SchoolBusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ParentStudent", b =>
                {
                    b.Property<int>("ParentsId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("ParentsId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("ParentStudent");
                });

            modelBuilder.Entity("SchoolBusModel.Entitys.normul.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasAnnotation("CK_Car_Capacity", "Capacity >= 10 and Capacity <= 40");

                    b.Property<string>("CarNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 20,
                            CarNumber = "01-MN-001",
                            Marka = "BWE",
                            Model = "BWE12"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 22,
                            CarNumber = "02-WY-245",
                            Marka = "KIA",
                            Model = "KIA12"
                        });
                });

            modelBuilder.Entity("SchoolBusModel.Entitys.normul.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Class");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Class_1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Class_2"
                        });
                });

            modelBuilder.Entity("SchoolBusModel.Entitys.normul.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            FirstName = "Driver_1",
                            LastName = "Driver_1",
                            Phone = "055-234-45-87"
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            FirstName = "Driver_2",
                            LastName = "Driver_2",
                            Phone = "070-345-26-76"
                        });
                });

            modelBuilder.Entity("SchoolBusModel.Entitys.normul.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Parent_1",
                            LastName = "Parent_1",
                            Phone = "050-234-56-87"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Parent_2",
                            LastName = "Parent_2",
                            Phone = "055-837-17-54"
                        });
                });

            modelBuilder.Entity("SchoolBusModel.Entitys.normul.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("ClassId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ParentStudent", b =>
                {
                    b.HasOne("SchoolBusModel.Entitys.normul.Parent", null)
                        .WithMany()
                        .HasForeignKey("ParentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolBusModel.Entitys.normul.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolBusModel.Entitys.normul.Driver", b =>
                {
                    b.HasOne("SchoolBusModel.Entitys.normul.Car", "Car")
                        .WithOne("Driver")
                        .HasForeignKey("SchoolBusModel.Entitys.normul.Driver", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("SchoolBusModel.Entitys.normul.Student", b =>
                {
                    b.HasOne("SchoolBusModel.Entitys.normul.Car", "Car")
                        .WithMany("Students")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolBusModel.Entitys.normul.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("SchoolBusModel.Entitys.normul.Car", b =>
                {
                    b.Navigation("Driver")
                        .IsRequired();

                    b.Navigation("Students");
                });

            modelBuilder.Entity("SchoolBusModel.Entitys.normul.Class", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
